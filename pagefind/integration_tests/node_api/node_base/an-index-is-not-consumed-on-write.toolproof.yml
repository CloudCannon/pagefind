name: Node API Base Tests > An index is not consumed on write
steps:
  - ref: ./background.toolproof.yml
  - step: I have a "output/index.html" file with the content {html}
    html: >-
      <!DOCTYPE html><html lang="en"><head></head><body> <p
      data-url>Nothing</p></body></html>
  - step: I have a "public/index.js" file with the content {js}
    js: |2-
       import * as pagefind from "pagefind";

       const run = async () => {
           const { index } = await pagefind.createIndex();
           await index.addHTMLFile({sourcePath: "dogs/index.html", content: "<html><body><h1>Testing, testing</h1></body></html>"});
           await index.writeFiles({ outputPath: "../output/pagefind" });

           await index.addHTMLFile({sourcePath: "rabbits/index.html", content: "<html><body><h1>Testing, testing</h1></body></html>"});
           const { files } = await index.getFiles();

           const fragments = files.filter(file => file.path.includes("fragment"));
           console.log(`${fragments.length} fragment(s)`);

           await index.addHTMLFile({sourcePath: "cats/index.html", content: "<html><body><h1>Testing, testing</h1></body></html>"});
           await index.writeFiles({ outputPath: "./pagefind" });

           console.log(`Successfully wrote files`);
       }

       run();
  - step: >-
      I run "cd public && npm i && PAGEFIND_BINARY_PATH=%pagefind_exec_path%
      node index.js"
  - step: stdout should contain "Successfully wrote files"
  - step: stdout should contain "2 fragment(s)"
  - step: The file "output/pagefind/pagefind.js" should not be empty
  - step: I serve the directory "output"
  - step: In my browser, I load "/"
  - step: In my browser, I evaluate {js}
    js: |-
      let pagefind = await import("/pagefind/pagefind.js");

       let search = await pagefind.search("testing");

       let pages = await Promise.all(search.results.map(r => r.data()));
       document.querySelector('[data-url]').innerText = pages.map(p => p.url).sort().join(", ");
  - step: In my browser, the console should be empty
  - step: In my browser, I evaluate {js}
    js: |-
      let val = await toolproof.querySelector("[data-url]");
      toolproof.assert_eq(val.innerHTML, `/dogs/`);
  - step: I serve the directory "public"
  - step: In my browser, I load "/"
  - step: In my browser, I evaluate {js}
    js: |-
      let pagefind = await import("/pagefind/pagefind.js");

       let search = await pagefind.search("testing");

       let pages = await Promise.all(search.results.map(r => r.data()));
       document.querySelector('[data-url]').innerText = pages.map(p => p.url).sort().join(", ");
  - step: In my browser, the console should be empty
  - step: In my browser, I evaluate {js}
    js: |-
      let val = await toolproof.querySelector("[data-url]");
      toolproof.assert_eq(val.innerHTML, `/cats/, /dogs/, /rabbits/`);
