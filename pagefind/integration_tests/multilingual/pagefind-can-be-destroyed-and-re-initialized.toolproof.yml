name: Multilingual > Pagefind can be destroyed and re-initialized
steps:
  - ref: ./background.toolproof.yml
  - step: I have a "public/index.html" file with the content {html}
    html: |-
      <!DOCTYPE html>
      <html lang="en">
          <head>
              <title>Generic Page</title>
          </head>
          <body>
              <p data-result-a>Nothing</p>
              <p data-result-b>Nothing</p>
          </body>
      </html>
  - macro: I run Pagefind
  - step: stdout should contain "Running Pagefind"
  - step: The file "public/pagefind/pagefind.js" should not be empty
  - step: I run "ls -lh public/pagefind/wasm.unknown.pagefind"
    notes: 'TODO: Build a file existence check into toolproof'
  - step: I run "ls -lh public/pagefind/wasm.en.pagefind"
    notes: 'TODO: Build a file existence check into toolproof'
  - step: I run "ls -lh public/pagefind/wasm.pt-br.pagefind"
    notes: 'TODO: Build a file existence check into toolproof'
  - step: The file "public/pagefind/pagefind-entry.json" should contain "en"
  - step: The file "public/pagefind/pagefind-entry.json" should contain "pt-br"
  - step: I serve the directory "public"
  - step: In my browser, I load "/"
  - step: In my browser, I evaluate {js}
    js: >-
      let pagefind = await import("/pagefind/pagefind.js");


      await pagefind.init();

      let en_search = await pagefind.search("documenting");


      let en_data = en_search.results[0] ? await en_search.results[0].data() :
      "None";

      document.querySelector('[data-result-a]').innerText =
      `${en_search.results.length} — ${en_data.url}`;


      await pagefind.destroy();


      document.querySelector('html').setAttribute("lang", "pt-br");


      await pagefind.init();

      let pt_search = await pagefind.search("quilométricos");


      let pt_data = pt_search.results[0] ? await pt_search.results[0].data() :
      "None";

      document.querySelector('[data-result-b]').innerText =
      `${pt_search.results.length} — ${pt_data.url}`;
  - step: In my browser, the console should be empty
  - step: In my browser, I evaluate {js}
    js: |-
      let val = await toolproof.querySelector("[data-result-a]");
      toolproof.assert_eq(val.innerHTML, `1 — /en/`);
  - step: In my browser, I evaluate {js}
    js: |-
      let val = await toolproof.querySelector("[data-result-b]");
      toolproof.assert_eq(val.innerHTML, `1 — /pt-br/`);
