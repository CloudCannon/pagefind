name: >-
  Exclusions > Elements within search regions can be excluded from indexing and
  excerpts
steps:
  - ref: ./background.toolproof.yml
  - step: I have a "public/index.html" file with the content {html}
    html: >-
      <!DOCTYPE html><html lang="en"><head></head><body><p
      data-search-one>Nothing</p>

      <p data-search-two>Nothing</p></body></html>
  - step: I have a "public/cat/index.html" file with the content {html}
    html: >-
      <!DOCTYPE html><html lang="en"><head></head><body><p>Hello World, from
      <span data-pagefind-ignore>not</span> Pagefind</p>

      <p data-pagefind-ignore>Goodbye</p>

      <div data-pagefind-ignore>
          <p>Nested content</p>
      </div>

      <p>Huzzah!</p></body></html>
  - step: I run "%pagefind_exec_path%"
  - step: stdout should contain "Running Pagefind"
  - step: I serve the directory "public"
  - step: In my browser, I load "/"
  - step: In my browser, I evaluate {js}
    js: >-
      let pagefind = await import("/pagefind/pagefind.js");


      let searchone = await pagefind.search("hello");

      let searchonedata = await searchone.results[0].data();

      document.querySelector('[data-search-one]').innerText =
      searchonedata.content;


      let searchtwo = await pagefind.search("goodbye");

      document.querySelector('[data-search-two]').innerText =
      `${searchtwo.results.length} result(s)`;
  - step: In my browser, the console should be empty
  - step: In my browser, I evaluate {js}
    js: |-
      let val = await toolproof.querySelector("[data-search-one]");
      toolproof.assert_eq(val.innerHTML, `Hello World, from Pagefind. Huzzah!`);
  - step: In my browser, I evaluate {js}
    js: |-
      let val = await toolproof.querySelector("[data-search-two]");
      toolproof.assert_eq(val.innerHTML, `0 result(s)`);
