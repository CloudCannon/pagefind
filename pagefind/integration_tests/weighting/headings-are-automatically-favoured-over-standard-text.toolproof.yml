name: Word Weighting > Headings are automatically favoured over standard text
steps:
  - ref: ./background.toolproof.yml
  - step: I have a "public/r1/index.html" file with the content {html}
    html: |-
      <!DOCTYPE html><html lang="en"><head></head><body><p>Antelope</p>
      <p>Antelope Antelope Antelope Antelope</p>
      <p>Other text again</p></body></html>
  - step: I have a "public/r2/index.html" file with the content {html}
    html: |-
      <!DOCTYPE html><html lang="en"><head></head><body><p>Antelope</p>
      <p>Antelope Antelope Antelope Notantelope</p>
      <p>Other text again</p></body></html>
  - step: I have a "public/r3/index.html" file with the content {html}
    html: |-
      <!DOCTYPE html><html lang="en"><head></head><body><h5>Antelope</h5>
      <p>Antelope Antelope Antelope Notantelope</p>
      <p>Other text again</p></body></html>
  - step: I have a "public/r4/index.html" file with the content {html}
    html: |-
      <!DOCTYPE html><html lang="en"><head></head><body><h1>Antelope</h1>
      <p>Other text, totalling eight words of content</p></body></html>
  - step: I have a "public/r5/index.html" file with the content {html}
    html: |-
      <!DOCTYPE html><html lang="en"><head></head><body><h3>Antelope</h3>
      <p>Other antelope antelope text, of a similar length</p></body></html>
  - macro: I run Pagefind
  - step: stdout should contain "Running Pagefind"
  - step: I serve the directory "public"
  - step: In my browser, I load "/"
  - step: In my browser, I evaluate {js}
    js: |-
      let pagefind = await import("/pagefind/pagefind.js");

      let search = await pagefind.search(`antelope`);

      let data = await Promise.all(search.results.map(result => result.data()));
      document.querySelector('p').innerText = data.map(d => d.url).join(', ');
  - step: In my browser, the console should be empty
  - step: In my browser, I evaluate {js}
    js: |-
      let val = await toolproof.querySelector("p");
      toolproof.assert_eq(val.innerHTML, `/r4/, /r5/, /r3/, /r1/, /r2/`);
