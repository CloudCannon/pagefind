name: Graceful Pagefind Errors > Anchors do not leak through metadata
steps:
  - ref: ./background.toolproof.yml
  - step: I have a "public/index.html" file with the content {html}
    html: |-
      <!DOCTYPE html>
      <html>
      <body>
          <p data-title>Nothing</p>
          <p data-subs>Nothing</p>
          <p data-meta>Nothing</p>
          <p data-filter>Nothing</p>
      </body>
      </html>
  - step: I have a "public/test/index.html" file with the content {html}
    html: |-
      <!DOCTYPE html>
      <html>
      <body>
          <h1 id="heading_id">
              <a href="#heading_id" id="heading_id">Heading text</a>
          </h1>
          <h2 id="second_heading_id">
              <a href="#ack" id="ack">Second meta text</a>
          </h2>
          <p data-pagefind-meta="extra_meta">
              <a href="#meta_id" id="meta_id">Extra meta text</a>
          </p>
          <p data-pagefind-filter="extra_filter">
              <a href="#filter_id" id="filter_id">Extra filter text</a>
          </p>
      </body>
      </html>
  - macro: I run Pagefind
  - step: stdout should contain "Running Pagefind"
  - step: The file "public/pagefind/pagefind.js" should not be empty
  - step: I serve the directory "public"
  - step: In my browser, I load "/"
  - step: In my browser, I evaluate {js}
    js: >-
      let pagefind = await import("/pagefind/pagefind.js");


      let search = await pagefind.search("text");

      let results = await Promise.all(search.results.map(r => r.data()));

      let result = results[0];


      document.querySelector('[data-title]').innerText = result.meta.title;


      let subs = result.sub_results.map(s => s.title).sort().join(', ');

      document.querySelector('[data-subs]').innerText = subs;


      document.querySelector('[data-meta]').innerText = result.meta.extra_meta;


      let filters = await pagefind.filters();


      document.querySelector('[data-filter]').innerText =
      Object.keys(filters.extra_filter).join(", ");
  - step: In my browser, the console should be empty
  - step: In my browser, I evaluate {js}
    js: |-
      let val = await toolproof.querySelector("[data-title]");
      toolproof.assert_eq(val.innerHTML, `Heading text`);
  - step: In my browser, I evaluate {js}
    js: |-
      let val = await toolproof.querySelector("[data-subs]");
      toolproof.assert_eq(val.innerHTML, `Heading text, Second meta text`);
  - step: In my browser, I evaluate {js}
    js: |-
      let val = await toolproof.querySelector("[data-meta]");
      toolproof.assert_eq(val.innerHTML, `Extra meta text`);
  - step: In my browser, I evaluate {js}
    js: |-
      let val = await toolproof.querySelector("[data-filter]");
      toolproof.assert_eq(val.innerHTML, `Extra filter text`);
